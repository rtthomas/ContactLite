{"version":3,"sources":["webpack:///./src/app/app.component.ts","webpack:///./src/app/appointments/appointment-list.component.ts","webpack:///./src/app/appointments/appointment/appointment.component.ts","webpack:///./src/app/companies/company-list.component.ts","webpack:///./src/app/datetime.service.ts","webpack:///./src/app/companies/company/company.component.ts","webpack:///./src/app/contacts/contact-list.component.ts","webpack:///./src/app/contacts/contact/contact.component.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/model/email.model.ts","webpack:///./src/app/persons/person-list.component.ts","webpack:///./src/app/persons/person/person.component.ts","webpack:///./src/app/positions/position-list.component.ts","webpack:///./src/app/positions/position/position.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/appointments/appointment-list.component.html","webpack:///./src/app/app.module.ts","webpack:///./src/app/appointments/appointment/appointment.component.html","webpack:///./src/app/companies/company-list.component.html","webpack:///./src/app/companies/company/company.component.html","webpack:///./src/app/contacts/contact-list.component.html","webpack:///./src/app/contacts/contact/contact.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/persons/person-list.component.html","webpack:///./src/app/persons/person/person.component.html","webpack:///./src/app/positions/position-list.component.html","webpack:///./src/app/positions/position/position.component.html","webpack:///./src/app/model/entity.model.ts","webpack:///./src/app/cache.service.ts","webpack:///./src/app/entityComponentBase.ts","webpack:///./src/app/listComponentBase.ts","webpack:///./src/app/model/contact.model.ts","webpack:///./src/app/model/appointment.model.ts","webpack:///./src/app/model/company.model.ts","webpack:///./src/app/model/person.model.ts","webpack:///./src/app/model/position.model.ts","webpack:///./src/app/server.service.ts","webpack:///./src async","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component } from '@angular/core';\nimport { CacheService } from './cache.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  constructor(private cache: CacheService, private router: Router) { }\n\n  ngOnInit() {\n    this.cache.initialize();\n    this.router.navigate(['/']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Appointment } from '../model/appointment.model';\nimport { CacheService } from '../cache.service';\n\ndeclare var $:any;\n\n@Component({\n  selector: 'app-appointment-list',\n  templateUrl: './appointment-list.component.html'\n})\nexport class AppointmentListComponent implements OnInit {\n  // Will be filled by the service\n  appointments;\n  \n  constructor(private service: CacheService) {\n  }\n\n  ngOnInit() {\n    this.appointments = this.service.getAll('appointment');\n    // Collapse the menu if it is visible as drop down\n    if ($(\"#nav-toggle\").hasClass(\"in\")){\n      $(\".collapse\").collapse('toggle');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/appointments/appointment-list.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Appointment } from '../../model/appointment.model';\r\nimport { EntityComponentBase } from '../../entityComponentBase';\r\nimport { CacheService } from '../../cache.service';\r\nimport { DateTimeService } from '../../datetime.service';\r\nimport { Contact } from '../../model/contact.model';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-appointment',\r\n  templateUrl: './appointment.component.html'\r\n})\r\nexport class AppointmentComponent extends EntityComponentBase implements OnInit {\r\n  appointment: Appointment;\r\n  time: string; // for the html time element, which requires a string hh:mm\r\n  date: string; // for the html date element, which requires a string yyyy-mm-dd\r\n  selectedCompany: string; // the company name\r\n  selectedPerson: string; // the person name\r\n  selectedPosition: string; // the position title\r\n  companies = [];\r\n  persons = [];\r\n  positions = [];\r\n\r\n  private personNameToId = {};\r\n  private personIdToName = {};\r\n  private companyNameToId = {};\r\n  private companyIdToName = {};\r\n  private positionIdToTitle = {};\r\n  private positionTitleToId = {};\r\n  private id;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private cache: CacheService, private datetime: DateTimeService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.companies = this.cache.getAll('company');\r\n    this.persons = this.cache.getAll('person');\r\n    this.positions = this.cache.getAll('position');\r\n    // Map company, person and position names/title to their entity ids and vice-versa\r\n    let maps = this.createEntityMaps(this.companies, 'name');\r\n    this.companyNameToId = maps.attributeToId;\r\n    this.companyIdToName = maps.idToAttribute;\r\n    maps = this.createEntityMaps(this.persons, 'name');\r\n    this.personNameToId = maps.attributeToId;\r\n    this.personIdToName = maps.idToAttribute;\r\n    maps = this.createEntityMaps(this.positions, 'title');\r\n    this.positionTitleToId = maps.attributeToId;\r\n    this.positionIdToTitle = maps.idToAttribute;\r\n\r\n    this.id = this.route.snapshot.params['id'];\r\n    if (this.id === 'new') {\r\n      $('#convert').hide();\r\n      // Creating a new one\r\n      this.appointment = new Appointment(null, null, null, null, null);\r\n    }\r\n    else {\r\n      // Viewing or editing\r\n      $('#convert').show();\r\n      this.appointment = this.cache.getByIndex('appointment', this.id);\r\n      if (this.appointment.dateTime) {\r\n        const date: Date = new Date(this.appointment.dateTime);\r\n\r\n        let h: string = Number(date.getHours()).toString();\r\n        if (h.length === 1) {\r\n          h = '0' + h;\r\n        }\r\n\r\n        let m: string = Number(date.getMinutes()).toString();\r\n        if (m.length === 1) {\r\n          m = '0' + m;\r\n        }\r\n\r\n        this.time = h + \":\" + m;\r\n        if (this.time.length === 4) {\r\n          this.time = '0' + this.appointment.dateTime;\r\n        }\r\n        this.date = this.datetime.formatDateForInput(this.appointment.dateTime);\r\n      }\r\n      this.selectedCompany = this.companyIdToName[this.appointment.companyId];\r\n      this.selectedPerson = this.personIdToName[this.appointment.personId];\r\n      this.selectedPosition = this.positionIdToTitle[this.appointment.positionId];\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/appointments']);\r\n  }\r\n  save() {\r\n    let dateTime = new Date();\r\n    if (this.time){\r\n      const timeParts: string[] = this.time.split(':');\r\n      dateTime.setHours(+timeParts[0]);\r\n      dateTime.setMinutes(+timeParts[1]);\r\n    }\r\n    if (this.date) {\r\n      const dateParts: string[] = this.date.split('-');\r\n      dateTime.setFullYear(+dateParts[0], +dateParts[1] - 1, +dateParts[2]);\r\n      this.appointment.dateTime = dateTime.getTime();\r\n    }\r\n    this.cache.save('appointment', this.appointment);\r\n    this.router.navigate(['/appointments']);\r\n  }\r\n\r\n  /** Enables display of the Record button if the appointment date/time has passed */\r\n  displayIfConvertible(): string {\r\n    if (this.id === 'new' || !this.appointment.dateTime) {\r\n      return 'hidden';\r\n    }\r\n    const dateTime: Date = new Date(this.appointment.dateTime);\r\n    // Convertible if the date/time has been reached\r\n    const canConvert = dateTime.getTime() < (new Date()).getTime();\r\n    return canConvert ? 'btn btn-primary' : 'hidden';\r\n  }\r\n  /** Converts the appointment to a \"meeting\" contact */\r\n  convert() {\r\n    const contact = new Contact(null, this.appointment.positionId, this.appointment.personId, this.appointment.dateTime, 'meeting', null, null);\r\n    this.cache.save('contact', contact);\r\n    this.cache.deleteById('appointment', this.appointment.id);\r\n  }\r\n\r\n  /** Called upon selection of a company from the company selector */\r\n  selectCompany() {\r\n    this.appointment.companyId = this.companyNameToId[this.selectedCompany];\r\n  }\r\n  /** Called upon selection of a person from the person selector */\r\n  selectPerson() {\r\n    this.appointment.personId = this.personNameToId[this.selectedPerson];\r\n  }\r\n  /** Called upon selection of a position from the position selector */\r\n  selectPosition() {\r\n    this.appointment.positionId = this.positionTitleToId[this.selectedPosition];\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/appointments/appointment/appointment.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Company } from '../model/company.model';\nimport { CacheService } from '../cache.service';\nimport {ListComponentBase } from '../listComponentBase';\n\ndeclare var $:any;\n\n@Component({\n  selector: 'app-company-list',\n  templateUrl: './company-list.component.html'\n})\nexport class CompanyListComponent extends ListComponentBase implements OnInit {\n  \n  companies;\n  \n  constructor(cache: CacheService) {\n    super(cache);\n  }\n\n  ngOnInit() {\n    this.companies = this.cache.getAll('company');\n    // Collapse the menu if it is visible as drop down\n    if ($(\"#nav-toggle\").hasClass(\"in\")){\n      $(\".collapse\").collapse('toggle');\n    }\n  }\n\n  sort(field: string){\n    this.companies = this.sortList(this.companies, field);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/companies/company-list.component.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\n/** Provides utility methods for date and time formatting */\nexport class DateTimeService {\n\n  constructor() { }\n\n  /**\n   * Formats a date for display in an entity list in the form \"MMM dd, yyyy\"\n   * @param d a date millisecond value\n   */\n  public formatListDate(d: number) {\n    if (d) {\n      let date: Date = new Date(d);\n      const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n      const f = months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear();\n      return f;\n    }\n    else {\n      return '';\n    }\n  }\n\n  /** Formats a date for use in an HTML date input element \n   * @param d millisecond date value\n   * @return date string in form yyyy-mm-dd\n  */\n  formatDateForInput(d: number) {\n    const date: Date = new Date(d);\n    const year: string = Number(date.getFullYear()).toString();\n    let month: string = Number(date.getMonth() + 1).toString();\n    if (month.length === 1){\n      month = '0' + month;\n    }\n    let day: string = Number(date.getDate()).toString();\n    if (day.length === 1){\n      day = '0' + day;\n    }\n    const f = year.concat('-').concat(month).concat('-').concat(day);\n    return f;\n  }\n\n  /**\n  * Formats a date for display in an entity list in the form \"hh:mm aa\"\n  * @param t a date millisecond value  \n  */\n  public formatListTime(t: number) {\n    if (!t) {\n      return '';\n    }\n    const date:Date = new Date(t);\n    let h: number = date.getHours();\n    let m: string = new Number(date.getMinutes()).toString();\n    let ampm: string;\n\n    if (h == 12) {\n      ampm = 'PM';\n    }\n    else if (h > 12) {\n      ampm = 'PM';\n      h -= 12;\n    }\n    else {\n      ampm = 'AM';\n      if (h == 0) {\n        h = 12;\n      }\n    }\n\n    if (m.length == 1) {\n      m = '0' + m;\n    }\n    return String(h) + ':' + m + ' ' + ampm;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/datetime.service.ts","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Company } from '../../model/company.model';\nimport { CacheService } from '../../cache.service';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html'\n})\nexport class CompanyComponent implements OnInit {\n  company: Company;\n\n  constructor(private router: Router, private route: ActivatedRoute, private service: CacheService) { }\n\n  ngOnInit() {\n    const  id = this.route.snapshot.params['id'];\n    if (id == 'new'){\n      // Creating a new one\n      this.company = new Company(null, '','','','','');\n    }\n    else {\n      // Viewing or editing\n      this.company = this.service.getByIndex('company', id);\n    }\n  }\n\n  cancel(){\n    this.router.navigate(['/companies']);\n  }\n  save(){\n    this.service.save('company', this.company);\n    this.router.navigate(['/companies']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/companies/company/company.component.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Contact } from '../model/contact.model';\nimport { Email } from '../model/email.model';\nimport { CacheService } from '../cache.service';\nimport { Subscriber } from 'rxjs/Subscriber';\nimport { ListComponentBase } from '../listComponentBase';\n\ndeclare var $:any;\n\n@Component({\n  selector: 'app-contact-list',\n  templateUrl: './contact-list.component.html'\n})\nexport class ContactListComponent extends ListComponentBase implements OnInit, OnDestroy {\n  contacts;\n  emailText: string;\n  emailSubject:string;\n\n  private subscriber:Subscriber<string>;\n\n  constructor(cache: CacheService) {\n    super(cache);\n  }\n\n  ngOnInit() {\n    this.contacts = this.cache.getAll('contact');\n    // Collapse the menu if it is visible as drop down\n    if ($('#nav-toggle').hasClass('in')){\n      $('.collapse').collapse('toggle');\n    }\n  }\n  ngOnDestroy() {\n    if (this.subscriber){\n      this.subscriber.unsubscribe();\n    }\n  }\n\n  showIfEmail(index: number){\n    const contact:Contact = this.contacts[index];\n    return contact.type === 'email' ? '' : 'hidden';\n  }\n  showIfPhone(index: number){\n    const contact:Contact = this.contacts[index];\n    return contact.type === 'phone' || contact.type === 'meeting' ? '' : 'hidden';\n  }\n\n  /** Called when a View Email link is clicked */\n  viewEmail(index: number){\n    const contact:Contact = this.contacts[index];\n    const email:Email = this.cache.getById('email', contact.emailId);\n    this.emailSubject = email.subject;\n    this.subscriber = this.cache.getEmailContent(email.contentId).subscribe(\n      (text:string) => {\n        this.emailText = text;\n        $('#message-text').show();\n      }\n    );\n  }\n  closeEmail(){\n    $('#message-text').hide();\n  }\n\n  sort(field: string){\n    if (field === 'date'){\n      this.contacts = this.sortList(this.contacts, field);\n    }\n    else if (field === 'person'){\n      this.contacts = this.sortListReferenced(this.contacts, 'personId', 'person', 'name');\n    }\n    else if (field === 'position'){\n      this.contacts = this.sortListReferenced(this.contacts, 'positionId', 'position', 'title');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/contacts/contact-list.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Contact } from '../../model/contact.model';\r\nimport { Email } from '../../model/email.model';\r\nimport { CacheService } from '../../cache.service';\r\nimport { EntityComponentBase } from '../../entityComponentBase';\r\nimport { DateTimeService } from '../../datetime.service';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html'\r\n})\r\nexport class ContactComponent extends EntityComponentBase implements OnInit {\r\n  contact: Contact;\r\n  date: string; // for the html date element, which requires a string yyyy-mm-dd\r\n  selectedPerson; // the company name\r\n  selectedPosition; // the company name\r\n  isEmail: boolean;\r\n  isPhone: boolean;\r\n  isMeeting: boolean;\r\n  emailText: string;\r\n  emailSubject: string = '';\r\n  persons = [];\r\n  positions = [];\r\n  emails = [];\r\n\r\n  private personIdToName = {};\r\n  private personNameToId = {};\r\n  private positionIdToTitle = {};\r\n  private positionTitleToId = {};\r\n  private selectedEmailIndex: number;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private cache: CacheService,\r\n    private datetime: DateTimeService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.persons = this.cache.getAll('person');\r\n    this.positions = this.cache.getAll('position');\r\n    // Map person and position names to their entity ids and vice-versa\r\n    let maps = this.createEntityMaps(this.positions, 'title');\r\n    this.positionIdToTitle = maps.idToAttribute;\r\n    this.positionTitleToId = maps.attributeToId;\r\n    maps = this.createEntityMaps(this.persons, 'name');\r\n    this.personIdToName = maps.idToAttribute;\r\n    this.personNameToId = maps.attributeToId;\r\n\r\n    // Retrieve email list, filter out assigned ones\r\n    this.emails = this.cache.getAll('email').filter(\r\n      (email: Email) => { return !email.assigned; }\r\n    );\r\n\r\n    const id = this.route.snapshot.params['id'];\r\n    if (id === 'new') {\r\n      // Creating a new one\r\n      this.contact = new Contact(null, null, null, null, undefined, '', null);\r\n      this.isEmail = false;\r\n      this.isPhone = false;\r\n      this.isMeeting = false;\r\n    }\r\n    else {\r\n      // Viewing or editing\r\n      this.contact = this.cache.getByIndex('contact', id);\r\n      if (this.contact.date) {\r\n        this.date = this.datetime.formatDateForInput(this.contact.date);\r\n      }\r\n      if (this.contact.positionId) {\r\n        this.selectedPosition = this.positionIdToTitle[this.contact.positionId];\r\n      }\r\n      if (this.contact.personId) {\r\n        this.selectedPerson = this.personIdToName[this.contact.personId];\r\n      }\r\n      if (this.contact.type === 'email') {\r\n        this.isEmail = true;\r\n      }\r\n      else if (this.contact.type === 'phone') {\r\n        this.isPhone = true;\r\n      }\r\n      else {\r\n        this.isMeeting = true;\r\n        $('#save-button').removeAttr('disabled');\r\n      }\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/contacts']);\r\n  }\r\n  save() {\r\n    if (this.date) {\r\n      let date = new Date();\r\n      const parts: string[] = this.date.split('-');\r\n      date.setFullYear(+parts[0], +parts[1] - 1, +parts[2]);\r\n      this.contact.date = date.getTime();\r\n    }\r\n    if (this.isEmail) {\r\n      this.contact.type = 'email';\r\n      const email: Email = this.emails[this.selectedEmailIndex];\r\n      email.assigned = true;\r\n      this.cache.save('email', email);\r\n    }\r\n    else if (this.isPhone) {\r\n      this.contact.type = 'phone';\r\n    }\r\n    else {\r\n      this.contact.type = 'meeting';\r\n    }\r\n    this.cache.save('contact', this.contact);\r\n    this.router.navigate(['/contacts']);\r\n  }\r\n\r\n  /** Called upon selection of a person from the person selector */\r\n  selectPerson() {\r\n    this.contact.personId = this.personNameToId[this.selectedPerson];\r\n  }\r\n\r\n  /** Called upon selection of a position from the position selector */\r\n  selectPosition() {\r\n    this.contact.positionId = this.positionTitleToId[this.selectedPosition];\r\n  }\r\n\r\n  /** Called when Email radio button clicked */\r\n  setEmail() {\r\n    this.isEmail = true;\r\n    this.isPhone = false;\r\n  }\r\n\r\n  /** Called when Phone radio button clicked */\r\n  setPhone() {\r\n    this.isEmail = false;\r\n    this.isPhone = true;\r\n    $('#save-button').removeAttr('disabled');\r\n  }\r\n\r\n  /** Called when email selected from the email list */\r\n  selectEmail(index: number) {\r\n    this.selectedEmailIndex = index;\r\n    const email: Email = this.emails[index];\r\n    this.contact.emailId = email.id;\r\n    this.contact.date = email.date;\r\n    $('#save-button').removeAttr('disabled');\r\n  }\r\n\r\n  /** Called when View button clicked, opens the email content popup */\r\n  viewEmail(index: number) {\r\n    const email = this.emails[index];\r\n    this.cache.getEmailContent(email.contentId).subscribe(\r\n      (text: string) => this.emailText = text);\r\n    this.emailSubject = email.subject;\r\n    $('#message-text').show();\r\n  }\r\n  /** Closes the email content popup */\r\n  hideContent() {\r\n    $('#message-text').hide();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/contacts/contact/contact.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { Entity } from './entity.model';\r\nimport { CacheService } from '../cache.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { AppModule } from '../app.module';\r\nimport { DateTimeService } from '../datetime.service';\r\n\r\n@Injectable()\r\nexport class Email extends Entity {\r\n    cache = AppModule.injector.get(CacheService);\r\n    datetime = AppModule.injector.get(DateTimeService);\r\n\r\n    static fromJson(json: any) {\r\n        var p = new Email(\r\n            json.id,\r\n            json.sender,\r\n            json.receiver,\r\n            json.date,\r\n            json.subject,\r\n            json.contentId,\r\n            json.assigned);\r\n        console.log(p);\r\n        return p;\r\n    }\r\n\r\n    constructor(\r\n        public id: number,\r\n        public sender: string,\r\n        public receiver: string,\r\n        public date: number,\r\n        public subject: string,\r\n        public contentId: number,\r\n        public assigned: boolean\r\n    ) {super();}\r\n\r\n    formatDate() {\r\n        return this.datetime.formatListDate(this.date);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/email.model.ts","import { Component, OnInit } from '@angular/core';\nimport { CacheService } from '../cache.service';\nimport { ListComponentBase } from '../listComponentBase';\n\ndeclare var $:any;\n\n@Component({\n  selector: 'app-person-list',\n  templateUrl: './person-list.component.html'\n})\nexport class PersonListComponent extends ListComponentBase implements OnInit {\n  // Will be filled by the cache\n  persons;\n  \n  constructor(cache: CacheService) {\n    super(cache);\n  }\n\n  ngOnInit() {\n    this.persons = this.cache.getAll('person');\n    // Collapse the menu if it is visible as drop down\n    if ($(\"#nav-toggle\").hasClass(\"in\")){\n      $(\".collapse\").collapse('toggle');\n    }\n  }\n\n  sort(field: string){\n    if (field === 'name'){\n      this.persons = this.sortList(this.persons, field);\n    }\n    else if (field === 'company'){\n      this.persons = this.sortListReferenced(this.persons, 'companyId', 'company', 'name');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/persons/person-list.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Person } from '../../model/person.model';\nimport { EntityComponentBase } from '../../entityComponentBase';\nimport { CacheService } from '../../cache.service';\n\n@Component({\n  selector: 'app-person',\n  templateUrl: './person.component.html'\n})\nexport class PersonComponent extends EntityComponentBase implements OnInit {\n  person: Person;\n  selectedCompany; // the company name\n  companies = [];\n\n  private companyIdToName = {}; \n  private companyNameToId = {}; \n\n  constructor(private router: Router, private route: ActivatedRoute, private service: CacheService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.companies = this.service.getAll('company');\n    // Map company names to company ids and vide-versa\n    const maps = this.createEntityMaps(this.companies, 'name');\n    this.companyIdToName = maps.idToAttribute;\n    this.companyNameToId = maps.attributeToId;\n\n    const id = this.route.snapshot.params['id'];\n    if (id == 'new') {\n      // Creating a new one\n      this.person = new Person(null, '', '', '', null);\n    }\n    else {\n      // Viewing or editing\n      this.person = this.service.getByIndex('person', id);\n      this.selectedCompany = this.companyIdToName[this.person.companyId];\n    }\n  }\n\n  /** Cancels the dialog */\n  cancel() {\n    this.router.navigate(['/persons']);\n  }\n\n  /** Saves or updates the person */\n  save() {\n    this.service.save('person', this.person);\n    this.router.navigate(['/persons']);\n  }\n\n  /** Called upon selection of a company from the company selector */\n  select(event) {\n    this.person.companyId = this.companyNameToId[this.selectedCompany];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/persons/person/person.component.ts","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { CacheService } from '../cache.service';\nimport { ListComponentBase } from '../listComponentBase';\n\ndeclare var $:any;\n\n@Component({\n  selector: 'app-positions',\n  templateUrl: './position-list.component.html'\n})\nexport class PositionListComponent extends ListComponentBase implements OnInit {\n  // Will be filled by the cache service\n  positions;\n\n  constructor(cache: CacheService) {\n    super(cache);\n  }\n\n  ngOnInit() {\n    this.positions = this.cache.getAll('position');\n    // Add a 'deletable' attribute to any position if not referenced by a contact or appointment\n    for (const position of this.positions){\n      this.checkIfDeletable(position);\n    }\n    // Collapse the menu if it is visible as drop down\n    if ($(\"#nav-toggle\").hasClass(\"in\")){\n      $(\".collapse\").collapse('toggle');\n    }\n  }\n\n  isNotDeletable(i: number){\n    return this.positions[i].deletable ? 'hidden' : 'delete-cell';\n  }\n  isDeletable(i: number, small: boolean){\n    if (small){\n      return this.positions[i].deletable ? 'material-icons' : 'hidden';\n    }\n    else {\n      return this.positions[i].deletable ? 'delete-cell' : 'hidden';     \n    }\n  }\n\n  private checkIfDeletable(position){\n    const appointments = this.cache.getAll('appointment');\n    for (const appointment of appointments){\n      if (appointment.positionId === position.id){\n        return;\n      }\n    }\n    const contacts = this.cache.getAll('contact');\n    for (const contact of contacts){\n      if (contact.positionId === position.id){\n        return;\n      }\n    }\n    position.deletable=true;\n  }\n\n  sort(field: string){\n    if (field === 'title'){\n      this.positions = this.sortList(this.positions, field);\n    }    \n    else if (field === 'company'){\n      this.positions = this.sortListReferenced(this.positions, 'companyId', 'company', 'name');\n    }\n    else if (field === 'person'){\n      this.positions = this.sortListReferenced(this.positions, 'personId', 'person', 'name');\n    }\n    else if (field === 'datePosted'){\n      this.positions = this.sortList(this.positions, field);\n    }\n    else if (field === 'dateApplied'){\n      this.positions = this.sortList(this.positions, field);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/positions/position-list.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Position } from '../../model/position.model';\r\nimport { EntityComponentBase } from '../../entityComponentBase';\r\nimport { CacheService } from '../../cache.service';\r\nimport { DateTimeService } from '../../datetime.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-position',\r\n  templateUrl: './position.component.html'\r\n})\r\nexport class PositionComponent extends EntityComponentBase implements OnInit {\r\n  position: Position;\r\n  datePosted: string; // for the html date element, which requires a string yyyy-mm-dd\r\n  dateApplied: string; // for the html date element, which requires a string yyyy-mm-dd\r\n  selectedCompany; // the company name\r\n  selectedPerson; // the person name\r\n  companies = [];\r\n  persons = [];\r\n\r\n  private personNameToId = {};\r\n  private personIdToName = {};\r\n  private companyNameToId = {};\r\n  private companyIdToName = {};\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private service: CacheService, private datetime: DateTimeService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.companies = this.service.getAll('company');\r\n    this.persons = this.service.getAll('person');\r\n    // Map company and person names to their entity ids and vice-versa\r\n    let maps = this.createEntityMaps(this.companies, 'name');\r\n    this.companyNameToId = maps.attributeToId;\r\n    this.companyIdToName = maps.idToAttribute;\r\n    maps = this.createEntityMaps(this.persons, 'name');\r\n    this.personNameToId = maps.attributeToId;\r\n    this.personIdToName = maps.idToAttribute;\r\n\r\n    const id = this.route.snapshot.params['id'];\r\n    if (id === 'new') {\r\n      // Creating a new one\r\n      this.position = new Position(null, '', '', null, null, null, null);\r\n    }\r\n    else {\r\n      // Viewing or editing\r\n      this.position = this.service.getByIndex('position', id);\r\n      if (this.position.datePosted) {\r\n        this.datePosted = this.datetime.formatDateForInput(this.position.datePosted);\r\n      }\r\n      if (this.position.dateApplied) {\r\n        this.dateApplied = this.datetime.formatDateForInput(this.position.dateApplied);\r\n      }\r\n      this.selectedCompany = this.companyIdToName[this.position.companyId];\r\n      this.selectedPerson = this.personIdToName[this.position.personId];\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/positions']);\r\n  }\r\n  save() {\r\n    if (this.datePosted) {\r\n      let posted = new Date();\r\n      let parts: string[] = this.datePosted.split('-');\r\n      posted.setFullYear(+parts[0], +parts[1] - 1, +parts[2]);\r\n      this.position.datePosted = posted.getTime();\r\n    }\r\n    if (this.dateApplied) {\r\n      let applied = new Date();\r\n      let parts = this.dateApplied.split('-');\r\n      applied.setFullYear(+parts[0], +parts[1] - 1, +parts[2]);\r\n      this.position.dateApplied = applied.getTime();\r\n    }\r\n\r\n    console.log(\"Posted \" + this.position.datePosted + ' : ' + this.datePosted);\r\n    this.service.save('position', this.position);\r\n    this.router.navigate(['/positions']);\r\n  }\r\n\r\n  /** Called upon selection of a person from the person selector */\r\n  selectPerson() {\r\n    this.position.personId = this.personNameToId[this.selectedPerson];\r\n  }\r\n  /** Called upon selection of a company from the position selector */\r\n  selectCompany() {\r\n    this.position.companyId = this.companyNameToId[this.selectedCompany];\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/positions/position/position.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 175\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n  <!-- Contains the menu -->\\n  <app-home></app-home>\\n  <!-- Will hold one of the five main pages -->\\n  <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 178\n// module chunks = 1","module.exports = \"<a routerLink=\\\"/appointments/new\\\"><i class=\\\"material-icons\\\" style=\\\"float:right\\\">add</i></a>\\n<a routerLink=\\\"/appointments/new\\\" class=\\\"btn btn-primary new-button\\\" role=\\\"button\\\">New Appointment</a>\\n<br><p>\\n<!-- List of all appointments. On large displays, a conventional table -->\\n<div class=\\\"table-container hidden-small\\\">\\n  <table class=\\\"table-condensed\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"edit-cell\\\"></th>\\n        <th>Company</th>\\n        <th>Person</th>\\n        <th>Date</th>\\n        <th>Time</th>\\n        <th>Position</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let a of appointments; let i = index\\\">\\n        <td class=\\\"edit-cell\\\">\\n          <a [routerLink]=\\\"['/appointments', i]\\\" class=\\\"btn btn-primary edit-button\\\" role=\\\"button\\\">Edit</a>\\n        </td>\\n        <td>{{a.getCompanyName()}}</td>\\n        <td>{{a.getPersonName()}}</td>\\n        <td>{{a.formatDate()}}</td>\\n        <td>{{a.formatTime()}}</td>\\n        <td>{{a.getPositionTitle()}}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<!-- On small displays -->\\n<div class=\\\"table-container hidden-large\\\">\\n  <table *ngFor=\\\"let a of appointments; let i = index\\\">\\n    <tr>\\n      <td class=\\\"select-edit\\\" colspan=\\\"3\\\">\\n        <i [routerLink]=\\\"['/appointments', i]\\\" class=\\\"material-icons\\\" style=\\\"font-size: 16px;\\\">create</i>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Company</td>\\n      <td colspan=\\\"2\\\">{{a.getCompanyName()}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Person</td>\\n      <td colspan=\\\"2\\\">{{a.getPersonName()}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Date</td>\\n      <td colspan=\\\"2\\\">{{a.formatDate()}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Time</td>\\n      <td colspan=\\\"2\\\">{{a.formatTime()}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Position</td>\\n      <td colspan=\\\"2\\\">{{a.getPositionTitle()}}</td>\\n    </tr>\\n  </table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/appointments/appointment-list.component.html\n// module id = 179\n// module chunks = 1","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport {Injector} from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { CompanyListComponent } from './companies/company-list.component';\nimport { CompanyComponent } from './companies/company/company.component';\nimport { PositionListComponent } from './positions/position-list.component';\nimport { PositionComponent } from './positions/position/position.component';\nimport { PersonListComponent } from './persons/person-list.component';\nimport { PersonComponent } from './persons/person/person.component';\nimport { AppointmentListComponent } from './appointments/appointment-list.component';\nimport { AppointmentComponent } from './appointments/appointment/appointment.component';\nimport { ContactListComponent } from './contacts/contact-list.component';\nimport { ContactComponent } from './contacts/contact/contact.component';\nimport { ServerService } from './server.service';\nimport { CacheService } from './cache.service';\nimport { DateTimeService } from './datetime.service';\n\nconst appRoutes: Routes = [\n  {path: 'companies', component: CompanyListComponent},\n  {path: 'companies/:id', component: CompanyComponent},\n  {path: 'positions', component: PositionListComponent},\n  {path: 'positions/:id', component: PositionComponent},\n  {path: 'appointments', component: AppointmentListComponent},\n  {path: 'appointments/:id', component: AppointmentComponent},\n  {path: 'contacts', component: ContactListComponent},\n  {path: 'contacts/:id', component: ContactComponent},\n  {path: 'persons', component: PersonListComponent},\n  {path: 'persons/:id', component: PersonComponent},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CompanyListComponent,\n    CompanyComponent,\n    PositionListComponent,\n    PositionComponent,\n    AppointmentListComponent,\n    AppointmentComponent,\n    ContactListComponent,\n    ContactComponent,\n    PersonListComponent,\n    PersonComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [ServerService, CacheService, {provide: LocationStrategy, useClass: HashLocationStrategy}, DateTimeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n    /**\n     * Allows for retrieving singletons using `AppModule.injector.get(MyService)`\n     * (whereas `ReflectiveInjector.resolveAndCreate(MyService)` would create a\n     * new instance of the service).\n     */\n    static injector: Injector;\n\n    constructor(injector: Injector) {\n        AppModule.injector = injector;\n    }  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"   <!--\\n   Create or edit an appointment \\n   -->\\n   <div>\\n     <div class=\\\"modal-dialog\\\">\\n       <div class=\\\"modal-content\\\">\\n         <div class=\\\"modal-header\\\">\\n           <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"><span>&times;</span></button>\\n           <h4 class=\\\"modal-title\\\">Appointment</h4>\\n         </div>\\n         <div class=\\\"modal-body\\\">\\n           <form>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"date\\\" class=\\\"control-label\\\">Date</label>\\n               <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"date\\\" id=\\\"date\\\" [(ngModel)]=\\\"date\\\">\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"time\\\" class=\\\"control-label\\\">Time</label>\\n               <input type=\\\"time\\\" class=\\\"form-control\\\" name=\\\"time\\\" id=\\\"time\\\" [(ngModel)]=\\\"time\\\">\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"sel1\\\" class=\\\"control-label\\\">Company</label>\\n               <select class=\\\"form-control\\\" id=\\\"sel1\\\" name=\\\"company\\\" [(ngModel)]=\\\"selectedCompany\\\" (change)=\\\"selectCompany()\\\">\\n                <option *ngFor=\\\"let c of companies\\\">\\n                  {{c.name}}\\n                </option>\\n               </select>\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"sel2\\\" class=\\\"control-label\\\">Person</label>\\n               <select class=\\\"form-control\\\" id=\\\"sel2\\\" name=\\\"person\\\" [(ngModel)]=\\\"selectedPerson\\\" (change)=\\\"selectPerson()\\\">\\n                <option *ngFor=\\\"let p of persons\\\">\\n                  {{p.name}}\\n                </option>\\n               </select>\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"sel3\\\" class=\\\"control-label\\\">Position</label>\\n               <select class=\\\"form-control\\\" id=\\\"sel3\\\" name=\\\"position\\\" [(ngModel)]=\\\"selectedPosition\\\" (change)=\\\"selectPosition()\\\">\\n                <option *ngFor=\\\"let p of positions\\\">\\n                  {{p.title}}\\n                </option>\\n               </select>\\n             </div>\\n          </form>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">Save</button>\\n          <!-- Convert button visible only for edit -->\\n          <button type=\\\"button\\\" [class]=\\\"displayIfConvertible()\\\" id=\\\"convert\\\" (click)=\\\"convert()\\\">Record</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/appointments/appointment/appointment.component.html\n// module id = 180\n// module chunks = 1","module.exports = \"<a routerLink=\\\"/companies/new\\\"><i class=\\\"material-icons\\\" style=\\\"float:right\\\">add</i></a>\\n<a routerLink=\\\"/companies/new\\\" class=\\\"btn btn-primary new-button\\\" role=\\\"button\\\">New Company</a>\\n<br><p>\\n<!-- \\nList of all companies. On large displays, two tables, one for the headers\\nand one for the content, so the header remains visible during scrolling\\n-->\\n<div class=\\\"table-container hidden-small\\\">\\n  <table class=\\\"table-condensed\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"edit-cell\\\"></th>\\n        <th>Name   <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" (click)=\\\"sort('name')\\\"></span></th>\\n        <th>Phone</th>\\n        <th>Address</th>\\n        <th>City   <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" (click)=\\\"sort('city')\\\"></span></th>\\n        <!-- Ensures column alignment when the scrollbar appears \\n        <th style=\\\"width:18px\\\">&nbsp;</th>-->\\n      </tr>\\n    </thead>\\n  </table>\\n</div>\\n<div class=\\\"table-container hidden-small\\\">\\n  <table class=\\\"table-condensed\\\">\\n    <tbody>\\n      <tr *ngFor=\\\"let c of companies; let i = index\\\">\\n        <td class=\\\"edit-cell\\\">\\n          <a [routerLink]=\\\"['/companies', i]\\\" class=\\\"btn btn-primary edit-button\\\" role=\\\"button\\\">Edit</a>\\n        </td>\\n        <td><a href=\\\"http://{{c.url}}\\\" target=\\\"_blank\\\">{{c.name}}</a></td>\\n        <td>{{c.phone}}</td>\\n        <td>{{c.address}}</td>\\n        <td>{{c.city}}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<!-- On small displays -->\\n<div class=\\\"table-container hidden-large\\\">\\n  <table *ngFor=\\\"let c of companies; let i = index\\\">\\n    <tr>\\n      <td class=\\\"select-edit\\\" colspan=\\\"3\\\">\\n        <i [routerLink]=\\\"['/companies', i]\\\" class=\\\"material-icons\\\" style=\\\"font-size: 16px;\\\">create</i>\\n       </td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Name</td>\\n      <td colspan=\\\"2\\\"><a href=\\\"http://{{c.url}}\\\" target=\\\"_blank\\\">{{c.name}}</a></td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Phone</td>\\n      <td colspan=\\\"2\\\">{{c.phone}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Address</td>\\n      <td colspan=\\\"2\\\">{{c.address}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">City</td>\\n      <td colspan=\\\"2\\\">{{c.citye}}</td>\\n    </tr>\\n  </table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/companies/company-list.component.html\n// module id = 181\n// module chunks = 1","module.exports = \"   <!--\\n   Create or edit a company\\n   -->\\n   <div>\\n     <div class=\\\"modal-dialog\\\">\\n       <div class=\\\"modal-content\\\">\\n         <div class=\\\"modal-header\\\">\\n           <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"><span>&times;</span></button>\\n           <h4 class=\\\"modal-title\\\">Company</h4>\\n         </div>\\n         <div class=\\\"modal-body\\\">\\n           <form>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"cmp-name\\\" class=\\\"control-label\\\">Name</label>\\n               <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"company.name\\\">\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"cmp-name\\\" class=\\\"control-label\\\">URL</label>\\n               <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"url\\\" [(ngModel)]=\\\"company.url\\\">\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"cmp-name\\\" class=\\\"control-label\\\">Address</label>\\n               <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" [(ngModel)]=\\\"company.address\\\">\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"cmp-name\\\" class=\\\"control-label\\\">City</label>\\n               <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"company.city\\\">\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"cmp-name\\\" class=\\\"control-label\\\">Phone</label>\\n               <input type=\\\"text\\\" class=\\\"form-control\\\"  name=\\\"phone\\\" [(ngModel)]=\\\"company.phone\\\">\\n             </div>\\n          </form>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">Save</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/companies/company/company.component.html\n// module id = 182\n// module chunks = 1","module.exports = \"<a routerLink=\\\"/contacts/new\\\"><i class=\\\"material-icons\\\" style=\\\"float:right\\\">add</i></a>\\n<a routerLink=\\\"/contacts/new\\\" class=\\\"btn btn-primary new-button\\\" role=\\\"button\\\">New Contact</a>\\n<br>\\n<p>\\n<!-- \\nList of all contacts. On large displays, two tables, one for the headers\\nand one for the content, so the header remains visible during scrolling \\n-->\\n<div class=\\\"table-container hidden-small\\\">\\n  <table class=\\\"table-condensed\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"edit-cell\\\"></th>\\n        <th>Date   <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" (click)=\\\"sort('date')\\\"></span></th>\\n        <th>Person   <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" (click)=\\\"sort('person')\\\"></span></th>\\n        <th>Position   <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" (click)=\\\"sort('position')\\\"></span></th>\\n        <th colspan=\\\"2\\\">Details</th>\\n      </tr>\\n    </thead>\\n  </table>\\n</div>\\n<div class=\\\"table-container hidden-small\\\">\\n  <table class=\\\"table-condensed\\\">  \\n    <tbody>\\n      <tr *ngFor=\\\"let c of contacts; let i = index\\\">\\n        <td class=\\\"edit-cell\\\">\\n          <a [routerLink]=\\\"['/contacts', i]\\\" class=\\\"btn btn-primary edit-button\\\" role=\\\"button\\\">Edit</a>\\n        </td>\\n        <td>{{c.formatDate()}}</td>\\n        <td>{{c.getPersonName()}}</td>\\n        <td>{{c.getPositionTitle()}}</td>\\n        <td colspan=\\\"2\\\" [class]=\\\"showIfEmail(i)\\\"><button type=\\\"button\\\" class=\\\"btn btn-xs btn-basic\\\" (click)=\\\"viewEmail(i)\\\">View Email</button></td>\\n        <td colspan=\\\"2\\\" [class]=\\\"showIfPhone(i)\\\">{{c.details}}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<!-- On small displays -->\\n<div class=\\\"table-container hidden-large\\\">\\n  <table *ngFor=\\\"let c of contacts; let i = index\\\">\\n    <tr>\\n      <td class=\\\"select-edit\\\" colspan=\\\"3\\\">\\n        <i [routerLink]=\\\"['/contacts', i]\\\" class=\\\"material-icons\\\" style=\\\"font-size: 16px;\\\">create</i>\\n     </td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Date</td>\\n      <td colspan=\\\"2\\\">{{c.formatDate()}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Person</td>\\n      <td colspan=\\\"2\\\">{{c.getPersonName()}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Position</td>\\n      <td colspan=\\\"2\\\">{{c.getPositionTitle()}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Details</td>\\n      <td colspan=\\\"2\\\" [class]=\\\"showIfEmail(i)\\\"><button type=\\\"button\\\" class=\\\"btn btn-xs btn-basic\\\" (click)=\\\"viewEmail(i)\\\">View Email</button></td>\\n      <td colspan=\\\"2\\\" [class]=\\\"showIfPhone(i)\\\">{{c.details}}</td>\\n    </tr>\\n  </table>\\n</div>\\n<!-- Modal displays email content-->\\n<div id=\\\"message-text\\\" class=\\\"modal\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <!-- Modal content-->\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeEmail()\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">{{emailSubject}}</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <textarea disabled=\\\"true\\\" class=\\\"email-text\\\">{{emailText}}</textarea>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"closeEmail()\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/contacts/contact-list.component.html\n// module id = 183\n// module chunks = 1","module.exports = \"<!--\\nCreate or edit a contact\\n-->\\n<div>\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"><span>&times;</span></button>\\n        <h4 class=\\\"modal-title\\\">Contact</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"sel1\\\">Person</label>\\n            <select class=\\\"form-control\\\" id=\\\"sel1\\\" name=\\\"person\\\" [(ngModel)]=\\\"selectedPerson\\\" (change)=\\\"selectPerson()\\\">\\n                  <option *ngFor=\\\"let p of persons\\\">\\n                    {{p.name}}\\n                  </option>\\n                 </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"sel1\\\">Position</label>\\n            <select class=\\\"form-control\\\" id=\\\"sel1\\\" name=\\\"position\\\" [(ngModel)]=\\\"selectedPosition\\\" (change)=\\\"selectPosition()\\\">\\n                  <option *ngFor=\\\"let p of positions\\\">\\n                    {{p.title}}\\n                  </option>\\n                 </select>\\n          </div>\\n          <div *ngIf='!isMeeting' class=\\\"form-group\\\">\\n            <label>Email&nbsp;&nbsp;</label>\\n            <input class=\\\"select-email-or-phone\\\" type=\\\"radio\\\" [value]=\\\"isEmail\\\" [checked]='isEmail' (change)=\\\"setEmail()\\\">&nbsp;&nbsp;&nbsp;&nbsp;\\n            <label>Phone&nbsp;&nbsp;</label>\\n            <input class=\\\"select-email-or-phone\\\" type=\\\"radio\\\" [value]=\\\"isPhone\\\" [checked]='isPhone' (change)=\\\"setPhone()\\\">\\n          </div>\\n          <!-- Date and details inputs visible only for phone contact -->\\n          <div *ngIf='isPhone || isMeeting'>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"cmp-date\\\" class=\\\"control-label\\\">Date</label>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"date\\\" [(ngModel)]=\\\"date\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"cmp-details\\\" class=\\\"control-label\\\">Details</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"details\\\" [(ngModel)]=\\\"contact.details\\\">\\n            </div>\\n          </div>\\n          <!-- Emails selector visible only for email contact -->\\n          <div *ngIf='isEmail' class=\\\"table-container\\\" id=\\\"message-list\\\">\\n            <table *ngFor=\\\"let m of emails; let i = index\\\">\\n              <tr>\\n                <td class=\\\"select-edit\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-sm\\\" (click)=\\\"selectEmail(i)\\\">Select</button>\\n                </td>\\n                <td>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-sm\\\" (click)=\\\"viewEmail(i)\\\">View</button>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td class=\\\"header\\\">Date</td>\\n                <td>{{m.formatDate()}}</td>\\n              </tr>\\n              <tr>\\n                <td class=\\\"header\\\">From</td>\\n                <td>{{m.sender}}</td>\\n              </tr>\\n              <tr>\\n                <td class=\\\"header\\\">To</td>\\n                <td>{{m.receiver}}</td>\\n              </tr>\\n              <tr>\\n                <td class=\\\"header\\\">Subject</td>\\n                <td>{{m.subject}}</td>\\n              </tr>\\n            </table>\\n            <!-- Modal displays email content-->\\n            <div id=\\\"message-text\\\" class=\\\"modal\\\" role=\\\"dialog\\\">\\n              <div class=\\\"modal-dialog\\\">\\n                <!-- Modal content-->\\n                <div class=\\\"modal-content\\\">\\n                  <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"hideContent()\\\">&times;</button>\\n                    <h4 class=\\\"modal-title\\\">{{emailSubject}}</h4>\\n                  </div>\\n                  <div class=\\\"modal-body\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <textarea disabled=\\\"true\\\" class=\\\"email-text\\\">{{emailText}}</textarea>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"hideContent()\\\">Close</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n        <button id=\\\"save-button\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\" disabled>Save</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/contacts/contact/contact.component.html\n// module id = 184\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\">\\n  <div class=\\\"navbar-header\\\">\\n    <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#nav-toggle\\\">\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n        </button>\\n  </div>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"nav-toggle\\\">\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/companies\\\">Companies</a></li>\\n      <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/persons\\\">People</a></li>\\n      <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/positions\\\">Positions</a></li>\\n      <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/contacts\\\">Contacts</a></li>\\n      <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/appointments\\\">Appointments</a></li>\\n    </ul>\\n  </div>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 185\n// module chunks = 1","module.exports = \"<a routerLink=\\\"/persons/new\\\"><i class=\\\"material-icons\\\" style=\\\"float:right\\\">add</i></a>\\n<a routerLink=\\\"/persons/new\\\" class=\\\"btn btn-primary new-button\\\" role=\\\"button\\\">New Person</a>\\n<br><p>\\n<!-- \\nList of all persons. On large displays, two tables, one for the headers\\nand one for the content, so the header remains visible during scrolling\\n-->\\n<div class=\\\"table-container hidden-small\\\">\\n  <table class=\\\"table-condensed\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"edit-cell\\\"></th>\\n        <th>Name   <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" (click)=\\\"sort('name')\\\"></span></th>\\n        <th>Email</th>\\n        <th>Phone</th>\\n        <th>Company   <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" (click)=\\\"sort('company')\\\"></span></th>\\n      </tr>\\n    </thead>\\n  </table>\\n</div>\\n<div class=\\\"table-container hidden-small\\\">\\n  <table class=\\\"table-condensed\\\">  \\n    <tbody>\\n      <tr *ngFor=\\\"let p of persons; let i = index\\\">\\n        <td class=\\\"edit-cell\\\">\\n          <a [routerLink]=\\\"['/persons', i]\\\" class=\\\"btn btn-primary edit-button\\\" role=\\\"button\\\">Edit</a>\\n        </td>\\n        <td>{{p.name}}</td>\\n        <td>{{p.email}}</td>\\n        <td>{{p.phone}}</td>\\n        <td>{{p.getCompanyName()}}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<!-- On small displays -->\\n<div class=\\\"table-container hidden-large\\\">\\n  <table *ngFor=\\\"let p of persons; let i = index\\\">\\n    <tr>\\n      <td class=\\\"select-edit\\\" colspan=\\\"3\\\">\\n        <i [routerLink]=\\\"['/persons', i]\\\" class=\\\"material-icons\\\" style=\\\"font-size: 16px;\\\">create</i>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Name</td>\\n      <td colspan=\\\"2\\\">{{p.name}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Email</td>\\n      <td colspan=\\\"2\\\">{{p.email}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Phone</td>\\n      <td colspan=\\\"2\\\">{{p.phone}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Company</td>\\n      <td colspan=\\\"2\\\">{{p.getCompanyName()}}</td>\\n    </tr>\\n  </table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/persons/person-list.component.html\n// module id = 186\n// module chunks = 1","module.exports = \"   <!--\\n   Create or edit a person\\n   -->\\n   <div>\\n     <div class=\\\"modal-dialog\\\">\\n       <div class=\\\"modal-content\\\">\\n         <div class=\\\"modal-header\\\">\\n           <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"><span>&times;</span></button>\\n           <h4 class=\\\"modal-title\\\">Person</h4>\\n         </div>\\n         <div class=\\\"modal-body\\\">\\n           <form>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"cmp-name\\\" class=\\\"control-label\\\">Name</label>\\n               <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"person.name\\\">\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"cmp-name\\\" class=\\\"control-label\\\">Email</label>\\n               <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"person.email\\\">\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"cmp-name\\\" class=\\\"control-label\\\">Phone</label>\\n               <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phone\\\" [(ngModel)]=\\\"person.phone\\\">\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"sel1\\\">Company</label>\\n               <select class=\\\"form-control\\\" id=\\\"sel1\\\" name=\\\"company\\\" [(ngModel)]=\\\"selectedCompany\\\" (change)=\\\"select($event)\\\">\\n                  <option *ngFor=\\\"let c of companies\\\">\\n                    {{c.name}}\\n                  </option>\\n                 </select>\\n             </div>\\n           </form>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">Save</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/persons/person/person.component.html\n// module id = 187\n// module chunks = 1","module.exports = \"<a routerLink=\\\"/positions/new\\\"><i class=\\\"material-icons\\\" style=\\\"float:right\\\">add</i></a>\\n<a routerLink=\\\"/positions/new\\\" class=\\\"btn btn-primary new-button\\\" role=\\\"button\\\">New Position</a>\\n<br><p>\\n<!-- \\nList of all positions. On large displays, two tables, one for the headers\\nand one for the content, so the header remains visible during scrolling\\n-->\\n<div class=\\\"table-container hidden-small\\\">\\n  <table class=\\\"table-condensed\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"edit-cell\\\"></th>\\n        <th class=\\\"delete-cell\\\"></th>\\n        <th>Title   <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" (click)=\\\"sort('title')\\\"></span></th>\\n        <th>Company   <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" (click)=\\\"sort('company')\\\"></span></th>\\n        <th>Person   <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" (click)=\\\"sort('person')\\\"></span></th>\\n        <th>Date Posted   <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" (click)=\\\"sort('datePosted')\\\"></span></th>\\n        <th>Date Applied   <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" (click)=\\\"sort('dateApplied')\\\"></span></th>\\n      </tr>\\n    </thead>\\n  </table>\\n</div>\\n<div class=\\\"table-container hidden-small\\\">\\n  <table class=\\\"table-condensed\\\">  \\n    <tbody>\\n      <tr *ngFor=\\\"let p of positions; let i = index\\\">\\n        <td class=\\\"edit-cell\\\">\\n          <a [routerLink]=\\\"['/positions', i]\\\" class=\\\"btn btn-primary edit-button\\\" role=\\\"button\\\">Edit</a>\\n        </td>\\n        <td [class]=\\\"isDeletable(i)\\\">\\n          <a (click)=\\\"delete(i)\\\" class=\\\"btn btn-primary edit-button\\\" role=\\\"button\\\">Delete</a>\\n        </td>\\n        <td [class]=\\\"isNotDeletable(i)\\\"></td>\\n        <td><a href=\\\"http://{{p.url}}\\\" target=\\\"_blank\\\">{{p.title}}</a></td>\\n        <td>{{p.getCompanyName()}}</td>\\n        <td>{{p.getPersonName()}}</td>\\n        <td>{{p.formatDatePosted()}}</td>\\n        <td>{{p.formatDateApplied()}}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<!-- On small displays -->\\n<div class=\\\"table-container hidden-large\\\">\\n  <table *ngFor=\\\"let p of positions; let i = index\\\">\\n    <tr>\\n      <td class=\\\"select-edit\\\" colspan=\\\"3\\\">\\n        <i [routerLink]=\\\"['/positions', i]\\\" class=\\\"material-icons\\\" style=\\\"font-size: 16px;\\\">create</i>\\n        <i (click)=\\\"delete(i)\\\" style=\\\"font-size: 16px;\\\" [class]=\\\"isDeletable(i, true)\\\">clear</i>\\n      </td>      \\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Title</td>\\n      <td colspan=\\\"2\\\">{{p.title}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">URL</td>\\n      <td colspan=\\\"2\\\"><a href=\\\"http://{{p.url}}\\\" target=\\\"_blank\\\">{{p.title}}</a></td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Company</td>\\n      <td colspan=\\\"2\\\">{{p.getCompanyName()}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Person</td>\\n      <td colspan=\\\"2\\\">{{p.getPersonName()}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Date Posted</td>\\n      <td colspan=\\\"2\\\">{{p.formatDatePosted()}}</td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"header\\\">Date Applied</td>\\n      <td colspan=\\\"2\\\">{{p.formatDateApplied()}}</td>\\n    </tr>\\n  </table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/positions/position-list.component.html\n// module id = 188\n// module chunks = 1","module.exports = \"   <!--\\n   Create or edit a position\\n   -->\\n   <div>\\n     <div class=\\\"modal-dialog\\\">\\n       <div class=\\\"modal-content\\\">\\n         <div class=\\\"modal-header\\\">\\n           <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"><span>&times;</span></button>\\n           <h4 class=\\\"modal-title\\\">Position</h4>\\n         </div>\\n         <div class=\\\"modal-body\\\">\\n           <form>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"cmp-name\\\" class=\\\"control-label\\\">Title</label>\\n               <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"position.title\\\">\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"cmp-name\\\" class=\\\"control-label\\\">URL</label>\\n               <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"position.url\\\">\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"sel1\\\">Company</label>\\n               <select class=\\\"form-control\\\" id=\\\"sel1\\\" name=\\\"company\\\" [(ngModel)]=\\\"selectedCompany\\\" (change)=\\\"selectCompany()\\\">\\n                  <option *ngFor=\\\"let c of companies\\\">\\n                    {{c.name}}\\n                  </option>\\n                 </select>\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"sel1\\\">Person</label>\\n               <select class=\\\"form-control\\\" id=\\\"sel1\\\" name=\\\"person\\\" [(ngModel)]=\\\"selectedPerson\\\" (change)=\\\"selectPerson()\\\">\\n                  <option *ngFor=\\\"let p of persons\\\">\\n                    {{p.name}}\\n                  </option>\\n                 </select>\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"cmp-date\\\" class=\\\"control-label\\\">Date Posted</label>\\n               <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"date-posted\\\" [(ngModel)]=\\\"datePosted\\\">\\n             </div>\\n             <div class=\\\"form-group\\\">\\n               <label for=\\\"cmp-date\\\" class=\\\"control-label\\\">Date Applied</label>\\n               <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"date-applied\\\" [(ngModel)]=\\\"dateApplied\\\">\\n             </div>\\n           </form>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">Save</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/positions/position/position.component.html\n// module id = 189\n// module chunks = 1","/**\r\n * Base class for entity module classes provides common utility functions\r\n */\r\nexport class Entity {\r\n\r\n    /** Extracts the time from a JSON date string as \"hh:mm\" */\r\n    static timeFromJSONDate(s: string) {\r\n        if (s) {\r\n            const d = new Date(s);\r\n            const h: string = String(d.getHours());\r\n            const m: string = d.getMinutes() < 10 ? '0'.concat(String(d.getMinutes())) : String(d.getMinutes());\r\n            return h.concat(':').concat(m);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    constructor() { }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/entity.model.ts","import { Injectable } from '@angular/core';\r\nimport { ServerService } from './server.service';\r\nimport { Company } from './model/company.model';\r\nimport { Person } from './model/person.model';\r\nimport { Position } from './model/position.model';\r\nimport { Appointment } from './model/appointment.model';\r\nimport { Contact } from './model/contact.model';\r\nimport { Email } from './model/email.model';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Observer } from 'rxjs/Observer';\r\n\r\n@Injectable()\r\n/** \r\n * Maintains cached copies of all entities. Each entity type ('company', 'person', etc.) is \r\n * used to access the corresponding cache arrays. The entity type also forms the path segment\r\n * in the REST api \r\n */\r\nexport class CacheService {\r\n\r\n  private entityCache = {\r\n    company: {\r\n      array: [],\r\n      idToEntity: {}\r\n    },\r\n    person: {\r\n      array: [],\r\n      idToEntity: {}\r\n    },\r\n    position: {\r\n      array: [],\r\n      idToEntity: {}\r\n    },\r\n    contact: {\r\n      array: [],\r\n      idToEntity: {}\r\n    },\r\n    appointment: {\r\n      array: [],\r\n      idToEntity: {}\r\n    },\r\n    email: {\r\n      array: [],\r\n      idToEntity: {}\r\n    },\r\n  };\r\n\r\n  /** Email content is \"lazy\" fetched from the server  */\r\n  private emailContentCache = {};\r\n\r\n  constructor(private server: ServerService) { }\r\n\r\n  /** Initializes the cache from the server */\r\n  initialize() {\r\n\r\n    this.server.getAll('company').subscribe(\r\n      (response) => {\r\n        this.entityCache['company'].array = response.json();\r\n        this.convertToClasses(this.entityCache['company'].array, 'company');\r\n        this.mapIdToEntity('company');\r\n\r\n        this.server.getAll('person').subscribe(\r\n          (response) => {\r\n            this.entityCache['person'].array = response.json();\r\n            this.convertToClasses(this.entityCache['person'].array, 'person');\r\n            this.mapIdToEntity('person');\r\n\r\n            this.server.getAll('position').subscribe(\r\n              (response) => {\r\n                this.entityCache['position'].array = response.json();\r\n                this.convertToClasses(this.entityCache['position'].array, 'position');\r\n                this.mapIdToEntity('position');\r\n\r\n                this.server.getAll('appointment').subscribe(\r\n                  (response) => {\r\n                    this.entityCache['appointment'].array = response.json();\r\n                    this.convertToClasses(this.entityCache['appointment'].array, 'appointment');\r\n                    this.mapIdToEntity('appointment');\r\n\r\n                    this.server.getAll('contact').subscribe(\r\n                      (response) => {\r\n                        this.entityCache['contact'].array = response.json();\r\n                        this.convertToClasses(this.entityCache['contact'].array, 'contact');\r\n                        this.mapIdToEntity('contact');\r\n\r\n                        this.server.getAll('email').subscribe(\r\n                          (response) => {\r\n                            this.entityCache['email'].array = response.json();\r\n                            this.convertToClasses( this.entityCache['email'].array, 'email');\r\n                            this.mapIdToEntity('email');\r\n                          }\r\n                        );\r\n                      }\r\n                    );\r\n                  }\r\n                );\r\n              }\r\n            );\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  /** \r\n   * Converts JSON representation of an entity into an object of the entity'e class \r\n   * @param array the entity array\r\n   * @param type the entity type\r\n   */\r\n  private convertToClasses(array: any, type: string) {\r\n    for (let i = 0; i < array.length; i++) {\r\n      const elem = array[i];\r\n      switch (type) {\r\n        case 'company': array[i] = Company.fromJson(elem); break;\r\n        case 'person': array[i] = Person.fromJson(elem); break;\r\n        case 'position': array[i] = Position.fromJson(elem); break;\r\n        case 'appointment': array[i] = Appointment.fromJson(elem); break;\r\n        case 'contact': array[i] = Contact.fromJson(elem); break;\r\n        case 'email': array[i] = Email.fromJson(elem); break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a map of entity id to entity object\r\n   * @param type the entity type\r\n   */\r\n  private mapIdToEntity(type: string) {\r\n    const array = this.entityCache[type].array;\r\n    for (let i = 0; i < array.length; i++) {\r\n      const entity = array[i];\r\n      this.entityCache[type].idToEntity[entity.id] = entity;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns all entities of a given type as an array. \r\n   * @param type the entity type\r\n   */\r\n  getAll(type: string) {\r\n    return this.entityCache[type].array;\r\n  }\r\n\r\n  /**\r\n   * Returns a map of id to entity for a specified entity type all entities of a given type as an array. \r\n   * @param type the entity type\r\n   */\r\n  getIdMap(type: string) {\r\n    return this.entityCache[type].idToEntity;\r\n  }\r\n\r\n  /** Gets an entity specified by its array index */\r\n  getByIndex(type: string, index: number) {\r\n    return this.entityCache[type].array[index];\r\n  }\r\n\r\n  /** Gets an entity specified by its id */\r\n  getById(type: string, id: number) {\r\n    return this.entityCache[type].idToEntity[id];\r\n  }\r\n\r\n  /**\r\n   * Fetches the text body content of an email from the server and caches it\r\n   * @param id the id of the email entity\r\n   * @return an Observable providing the email text \r\n   */\r\n  getEmailContent(id: number) {\r\n    return Observable.create((observer: Observer<string>) => {\r\n\r\n      const text:string = this.emailContentCache[id];\r\n      if (text) {\r\n        // Text is already in the cache\r\n        observer.next(text);\r\n      }\r\n      else {\r\n        // Retrieve from the server and store in the cache\r\n        this.server.getEmailContent(id).subscribe(\r\n          (response) => {\r\n            const text = response.json().text;\r\n            this.emailContentCache[id] = text;\r\n            observer.next(text);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /** \r\n   * Creates or updates an entity\r\n   * @param type the entity type\r\n   * @param entity the entity object\r\n   */\r\n  save(type: string, entity: any) {\r\n    if (entity.id) {\r\n      // Update\r\n      this.server.update(type, entity).subscribe(\r\n        (response) => { },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      // Create\r\n      this.server.create(type, entity).subscribe(\r\n        (response) => {\r\n          entity.id = response.json();\r\n          // Add it to the cache and the id to entity map\r\n          this.entityCache[type].array.push(entity);\r\n          const id = entity['id'];\r\n          this.entityCache[type].idToEntity[id] = entity;\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /** \r\n   * Deletes an entity\r\n   * @param type the entity type\r\n   * @param index the index of the object in the cached entity array\r\n   */\r\n  deleteByIndex(type: string, index: number) {\r\n    const entity = this.entityCache[type].array[index];\r\n    this.delete(type, entity.id, index);\r\n  }\r\n\r\n  /** \r\n   * Deletes an entity \r\n   * @param type the entity type\r\n   * @param id the entity id\r\n   */\r\n  deleteById(type: string, id: number){\r\n    // Locate index in the cache array\r\n    for (var index = 0; index < this.entityCache[type].array.length; index++){\r\n      const entity = this.entityCache[type].array[index];\r\n      if (entity.id === id){\r\n        break;\r\n      } \r\n    }\r\n    this.delete(type, id, index);\r\n  }\r\n\r\n  /** Sends the delete requrst to the server removes the entity from the cache array */\r\n  private delete(type: string, id: number, index: number){\r\n    this.server.delete(type, id).subscribe(\r\n      (response) => {\r\n        // Remove the entity from the cache array\r\n        this.entityCache[type].array.splice(index, 1);\r\n        console.log('Deleted ' + type + ' ' + id);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/cache.service.ts","/**\r\n * Base class for all \"entity\" components, providing common utility methods \r\n */\r\nexport class EntityComponentBase {\r\n    \r\n    /**\r\n     * For a given array of entity objects, creates a pair of maps;\r\n     * the \"attributeToId\" maps a specified entity atttribute to the 'id' field;\r\n     * the \"idToAttribute\" maps the inverse relationship\r\n     * @param entityList Array of entity objects\r\n     * @param attribute name of the entity attribute \r\n     * @return the maps object  \r\n     */\r\n    createEntityMaps(entityList: Array<any>, attribute: string) {\r\n        const maps = {attributeToId: {}, idToAttribute: {}};\r\n        for (let i = 0; i < entityList.length; i++) {\r\n            const id = entityList[i]['id'];\r\n            const value = entityList[i][attribute];\r\n            maps.attributeToId[value] = id;\r\n            maps.idToAttribute[id] = value;\r\n         }\r\n        return maps;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/entityComponentBase.ts","import { CacheService } from './cache.service';\r\n/**\r\n * Base class for list components, providing common utility functions\r\n */\r\nexport class ListComponentBase {\r\n    cache: CacheService;\r\n    \r\n    constructor(cache: CacheService) {this.cache = cache;}\r\n    /**\r\n     * Sorts an array of entities.\r\n     * @param list the array to be sorted\r\n     * @param sortBy the field of the entity class on which to sort\r\n     * @param isDate true if the sortBy field is a date string\r\n     */\r\n    sortList(list: any, sortBy: string){\r\n        const sortKeys = [];\r\n        const elementMap = {};\r\n        const sortedList = [];\r\n        for (const element of list){\r\n            const sortField = element[sortBy];\r\n            sortKeys.push(sortField);\r\n            if (!elementMap[sortField]){\r\n               elementMap[sortField] = []; \r\n            }\r\n            elementMap[sortField].push(element);\r\n        }\r\n        sortKeys.sort();\r\n        // Preserve original order of elements with same sort value\r\n        for (const index in elementMap){\r\n            elementMap[index].reverse();\r\n        }\r\n        for (const key of sortKeys){\r\n            const element = elementMap[key].pop();\r\n            sortedList.push(element);\r\n        }\r\n        return sortedList;\r\n    }\r\n    /**\r\n     * Sorts an array of entities. \r\n     * @param list the array to be sorted\r\n     * @param sortBy name of a \"foreign id\" attribute of the entity which references another entity containing the value on which to sort\r\n     * @param referenceType the referenced entity type\r\n     * @param referenceField the name of the attribute in the referenced entity on which to sort\r\n     */\r\n    sortListReferenced(list: any, sortBy: string, referenceType: string, referenceField: string){\r\n        const sortKeys = [];\r\n        const elementMap = {};\r\n        const sortedList = [];\r\n        for (const element of list){\r\n            const referenceId = element[sortBy];\r\n            let referencedEntity;\r\n            let sortField;\r\n            if (referenceId){\r\n                referencedEntity = this.cache.getById(referenceType, referenceId);\r\n                sortField = referencedEntity[referenceField];\r\n            }\r\n            else {\r\n                sortField = '';\r\n            }\r\n            sortKeys.push(sortField);\r\n            if (!elementMap[sortField]){\r\n               elementMap[sortField] = []; \r\n            }\r\n            elementMap[sortField].push(element);\r\n        }\r\n        sortKeys.sort();\r\n        // Preserve original order of elements with same sort value\r\n        for (const index in elementMap){\r\n            elementMap[index].reverse();\r\n        }\r\n        for (const key of sortKeys){\r\n            const element = elementMap[key].pop();\r\n            sortedList.push(element);\r\n        }\r\n        return sortedList;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/listComponentBase.ts","import { Entity } from './entity.model';\r\nimport { CacheService } from '../cache.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { AppModule } from '../app.module';\r\nimport { DateTimeService } from '../datetime.service';\r\n\r\n@Injectable()\r\nexport class Contact extends Entity {\r\n    cache = AppModule.injector.get(CacheService);\r\n    datetime = AppModule.injector.get(DateTimeService);\r\n    isEmail: boolean;\r\n    isPhone: boolean;\r\n\r\n    static fromJson(json: any) {\r\n        const p = new Contact(\r\n            json.id, \r\n            json.positionId, \r\n            json.personId, \r\n            json.date,   \r\n            json.type, \r\n            json.details, \r\n            json.emailId);\r\n        console.log(p);\r\n        return p;\r\n    }\r\n\r\n    constructor(\r\n        public id: number,\r\n        public positionId: number,\r\n        public personId: number,\r\n        public date: number,\r\n        public type: string,\r\n        public details: string,\r\n        public emailId: number\r\n    ) { super();}\r\n\r\n    getPositionTitle(){\r\n        if (this.positionId){\r\n            const position = this.cache.getById('position', this.positionId);\r\n            return position.title;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    getPersonName(){\r\n        if (this.personId){\r\n            const person = this.cache.getById('person', this.personId);\r\n            return person.name;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    formatDate() {\r\n        return this.datetime.formatListDate(this.date);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/contact.model.ts","import { Entity} from './entity.model';\r\nimport { CacheService } from '../cache.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { AppModule } from '../app.module';\r\nimport { DateTimeService } from '../datetime.service';\r\n\r\n@Injectable()\r\nexport class Appointment extends Entity{\r\n    \r\n    cache = AppModule.injector.get(CacheService);\r\n    datetime = AppModule.injector.get(DateTimeService);\r\n\r\n    static fromJson(json: any){\r\n        let p = new Appointment(\r\n            json.id, \r\n            json.companyId, \r\n            json.personId, \r\n            json.dateTime,  \r\n            json.positionId);\r\n        console.log(p);\r\n        return p;\r\n    }\r\n\r\n    constructor(\r\n        public id: number,\r\n        public companyId: number,\r\n        public personId: number,\r\n        public dateTime: number,\r\n        public positionId: number\r\n    ) { super(); }\r\n    \r\n    getCompanyName(){\r\n        if (this.companyId){\r\n            const company = this.cache.getById('company', this.companyId);\r\n            return company.name;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    getPersonName(){\r\n        if (this.personId){\r\n            const person = this.cache.getById('person', this.personId);\r\n            return person.name;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    getPositionTitle(){\r\n         if (this.positionId){\r\n            const position = this.cache.getById('position', this.positionId);\r\n            return position.title;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n     }\r\n    formatDate(){\r\n        return this.datetime.formatListDate(this.dateTime);\r\n    }\r\n    formatTime(){\r\n        return this.datetime.formatListTime(this.dateTime);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/appointment.model.ts","import { Entity} from './entity.model';\r\n\r\nexport class Company extends Entity {\r\n    static fromJson(json: any){\r\n        var p = new Company(json.id, json.address, json.city, json.name,  json.phone, json.url);\r\n        console.log(p);\r\n        return p;\r\n    }\r\n    constructor(\r\n        public id: number,\r\n        public address: string,\r\n        public city: string,\r\n        public name: string,\r\n        public phone: string,\r\n        public url: string\r\n    ) { super(); }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/company.model.ts","import { CacheService } from '../cache.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { AppModule } from '../app.module';\r\nimport { Entity} from './entity.model';\r\n\r\n\r\n@Injectable()\r\nexport class Person  extends Entity{\r\n    cache = AppModule.injector.get(CacheService);\r\n\r\n    static fromJson(json: any){\r\n        const p = new Person(json.id, json.name,  json.email, json.phone, json.companyId);\r\n        console.log(p);\r\n        return p;\r\n    }\r\n    \r\n    constructor(\r\n        public id: number, \r\n        public name: string, \r\n        public email: string, \r\n        public phone: string, \r\n        public companyId: number)\r\n        { super();}\r\n\r\n    \r\n    getCompanyName(){\r\n        if (this.companyId){\r\n            const company = this.cache.getById('company', this.companyId);\r\n            return company.name;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/person.model.ts","import { Entity } from './entity.model';\r\nimport { CacheService } from '../cache.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { AppModule } from '../app.module';\r\nimport { DateTimeService } from '../datetime.service';\r\n\r\n@Injectable()\r\nexport class Position extends Entity {\r\n  cache = AppModule.injector.get(CacheService);\r\n  datetime = AppModule.injector.get(DateTimeService);\r\n\r\n  static fromJson(json: any) {\r\n    let p = new Position(\r\n      json.id,\r\n      json.title,\r\n      json.url,\r\n      json.dateApplied,\r\n      json.datePosted,\r\n      json.companyId,\r\n      json.personId\r\n    );\r\n    console.log(p);\r\n    return p;\r\n  }\r\n\r\n  constructor(\r\n    public id: number,\r\n    public title: string,\r\n    public url: string,\r\n    public dateApplied: number,\r\n    public datePosted: number,\r\n    public companyId: number,\r\n    public personId: number\r\n  ) { super(); }\r\n\r\n  getCompanyName() {\r\n    if (this.companyId) {\r\n      const company = this.cache.getById('company', this.companyId);\r\n      return company.name;\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  getPersonName() {\r\n    if (this.personId) {\r\n      const person = this.cache.getById('person', this.personId);\r\n      return person.name;\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  formatDateApplied() {\r\n        return this.datetime.formatListDate(this.dateApplied);\r\n  }\r\n  formatDatePosted() {\r\n        return this.datetime.formatListDate(this.datePosted);\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/position.model.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Response, RequestOptionsArgs } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n/**\r\n * Provides the low level http calls for CRUD operations\r\n */\r\n@Injectable()\r\nexport class ServerService {\r\n\r\n  baseUrl: string;\r\n\r\n  constructor(private http: Http) {\r\n    if (document.baseURI === 'http://localhost:4200/') {\r\n      // Client loaded from VSCode local server \r\n      this.baseUrl = 'http://localhost:8888/rest/';\r\n    }\r\n    else {\r\n      // CLient loaded from local or remote App Engine server\r\n      this.baseUrl = document.baseURI + 'rest/';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetches all entities of a specified typoe\r\n   * @param entityType the entity type\r\n   */\r\n  getAll(entityType: string) {\r\n    const url = this.baseUrl + entityType;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  /**\r\n   * Updates an entity\r\n   * @param entityType the entity type\r\n   * @param entity the entity object (refer to the \"model\" folder for possible types)\r\n   */\r\n  update(entityType: string, entity: any) {\r\n    const url = this.baseUrl + entityType;\r\n    const converted = this.convertFields(entity);\r\n    return this.http.put(url, converted);\r\n  }\r\n\r\n  /**\r\n   * Creates an entity\r\n   * @param entityType the entity type\r\n   * @param entity the entity object (refer to the \"model\" folder for possible types)\r\n   */\r\n  create(entityType: string, entity: any) {\r\n    const url = this.baseUrl + entityType;\r\n    const converted = this.convertFields(entity);\r\n    return this.http.post(url, converted);\r\n  }\r\n\r\n  /**\r\n   * Deletes an entity\r\n   * @param entityType the entity type\r\n   * @param entity the entity object (refer to the \"model\" folder for possible types)\r\n   */\r\n  delete(entityType: string, entityId) {\r\n    const url = this.baseUrl + entityType + '/' + entityId;\r\n    return this.http.delete(url);\r\n  }\r\n\r\n  /**\r\n   * Transforms an object for transmission to the server by\r\n   * - removing functions\r\n   * - removing cache references\r\n   * - converting Date objects to strings in the form \"yyyy-mm-ddThh:mm:ssZ\"\r\n   * - converts strings representing dates to the same form\r\n   * Note that standard ISO-8601 format (\"yyyy-mm-ddThh:mm:ss.sssZ\") is not used.\r\n   * This is because a bug the the Google gson package of the server does not accept\r\n   * the standard format, requiring removal of the millisecond portion of the field\r\n   * @input entity the object to transform\r\n   * @return a transform of the object \r\n   */\r\n  private convertFields(entity: any) {\r\n    const converted = {};\r\n    for (const e in entity) {\r\n      const element = entity[e];\r\n      if (typeof element === 'function') {\r\n        continue;\r\n      }\r\n      if (typeof element === 'string') {\r\n        if (element.length === 10 && element.match('[0-9]{4}-[0-9]{2}-[0-9]{2}')) {\r\n          const parts = element.split('-');\r\n          let date = new Date();\r\n          date.setFullYear(+parts[0], (+parts[1]) - 1, +parts[2]);\r\n          const s = this.convertDate(date);\r\n          converted[e] = s;\r\n          continue;\r\n        }\r\n        else if (element.length === 5 && element.match('[0-9]{2}:[0-9]{2}')) {\r\n          const parts = element.split(':');\r\n          let date = new Date();\r\n          date.setHours(+parts[0], +parts[1]);\r\n          const s = this.convertDate(date);\r\n          converted[e] = s;\r\n          continue;\r\n        }\r\n      }\r\n      else if (element instanceof Date) {\r\n        const s = this.convertDate(element);\r\n        converted[e] = s;\r\n        continue;\r\n      }\r\n      if (e !== 'cache') {\r\n        converted[e] = element;\r\n      }\r\n    }\r\n    return converted;\r\n  }\r\n\r\n  getEmail() {\r\n    return this.http.get(this.baseUrl + 'email');\r\n  }\r\n  getEmailContent(id: number) {\r\n    return this.http.get(this.baseUrl + 'email/' + id);\r\n  }\r\n\r\n\r\n  /** Converts a Date to a string formatted as \"yyyy-mm-ddThh:mm:ssZ\" */\r\n  private convertDate(date: Date) {\r\n    let s = date.toISOString();\r\n    const l = s.length;\r\n    s = s.substr(0, l - 5) + 'Z';\r\n    return s;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/server.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 97;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 97\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":""}